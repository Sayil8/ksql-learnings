# FOR LOCAL DEVELOPMENT PURPOSES #
version: "3.7"
services:
  ksql-kafka:
    image: lensesio/fast-data-dev
    container_name: ksql-kafka
    hostname: ksql-kafka
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      - "ADVERTISED_HOST=ksql-kafka"
      - "ADVERTISED_PORT=9092"

  ksqldb-server:
    image: confluentinc/ksqldb-server
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - ksql-kafka
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: ksql-kafka:9092
      KSQL_KSQL_CONNECT_URL: http://kafka-connect:8083
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"

  ksqldb-cli:
    image: confluentinc/ksqldb-cli
    container_name: ksqldb-cli
    depends_on:
      - ksql-kafka
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      - ksql-kafka
    environment:
      TZ: "Europe/Berlin"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: ksql-kafka:2181
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_SERVERS: PLAINTEXT://ksql-kafka:9092
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: "none"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: "WARN"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://ksql-kafka:9092

  kafka-connect:
    container_name: kafka-connect
    image: confluentinc/cp-kafka-connect
    depends_on:
      - ksql-kafka
      - schema-registry
    ports:
      - '8083:8083'
    volumes:
      - ./jars:/usr/share/java/kafka-connect-jdbc
    environment:
      TZ: ksql-kafka
      CONNECT_BOOTSTRAP_SERVERS: "ksql-kafka:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/java/kafka-connect-jdbc'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1

  database:
    image: mysql:5.7
    container_name: database
    hostname: database
    environment:
      - "MYSQL_DATABASE=sems"
      - "MYSQL_ROOT_PASSWORD=root"
    volumes:
      - ./syntheticProducer/src/main/resources/shared-data:/var/lib/mysql
      - ./ad-syntheticProducer/src/main/resources/mysql/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    ports:
      - "3306:3306"

  synthetic-producer:
    container_name: synthetic-producer
    image: smuehr/synthetic-producer:latest
    ports:
      - "8080:8080"
    environment:
      TZ: "Europe/Berlin"
